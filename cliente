package proyecto3;

import java.awt.BorderLayout;
import java.awt.Desktop;
import java.awt.TextArea;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.net.URI;
import java.net.URISyntaxException;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;

import javax.swing.JTextArea;

public class cliente  extends JDialog {
	String serverAddres="";
	BufferedReader in;//Para leer del teclado con el método readLine()
	PrintWriter out;//Para poder mandar el string leido al servidor
	private final JPanel contentPanel = new JPanel();
	private JTextField tfRemitente;
	private JPasswordField tfContrasenha;
	private JTextField tfDestino;
	private JTextField tfAsunto;
	private JTextArea tfMensaje ;
	private JButton btnEnviarCorreo;
	/**
	 * @wbp.parser.entryPoint
	 */
	public  cliente() {
		setResizable(false);
		setTitle("Enviar correo");
		setBounds(100, 100, 667, 523);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel, BorderLayout.CENTER);
		contentPanel.setLayout(null);

		JLabel lblCorreo = new JLabel("Correo:");
		lblCorreo.setBounds(10, 21, 46, 14);
		contentPanel.add(lblCorreo);

		JLabel lblContrasea = new JLabel("Contrasena");
		lblContrasea.setBounds(10, 46, 87, 21);
		contentPanel.add(lblContrasea);

		JLabel lblPara = new JLabel("Para:");
		lblPara.setBounds(10, 128, 69, 21);
		contentPanel.add(lblPara);

		JLabel lblAsunto = new JLabel("Asunto:");
		lblAsunto.setBounds(10, 175, 46, 14);
		contentPanel.add(lblAsunto);

		JLabel lblMensaje = new JLabel("Mensaje:");
		lblMensaje.setBounds(10, 208, 60, 21);
		contentPanel.add(lblMensaje);

		tfRemitente = new JTextField();
		tfRemitente.setBounds(55, 15, 265, 27);
		contentPanel.add(tfRemitente);
		tfRemitente.setColumns(10);

		tfContrasenha = new JPasswordField();
		tfContrasenha.setBounds(75, 46, 245, 21);
		contentPanel.add(tfContrasenha);
		tfContrasenha.setColumns(10);

		tfDestino = new JTextField();
		tfDestino.setBounds(55, 128, 265, 21);
		contentPanel.add(tfDestino);
		tfDestino.setColumns(10);

		tfAsunto = new JTextField();
		tfAsunto.setBounds(55, 172, 265, 27);
		contentPanel.add(tfAsunto);
		tfAsunto.setColumns(10);

		btnEnviarCorreo = new JButton("Enviar ");
		btnEnviarCorreo.setBounds(299, 78, 130, 43);
		btnEnviarCorreo.setActionCommand("Enviar");
		contentPanel.add(btnEnviarCorreo);
		btnEnviarCorreo.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				out.println(tfRemitente.getText()+"¬"+ tfContrasenha.getText()+"¬"+
						tfDestino.getText()+"¬"+ tfAsunto.getText()+"¬"+tfMensaje.getText());
				System.out.print("enviando mensaje");
				btnEnviarCorreo.setEnabled(false);
				limpiar();

			}
		});

		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(90, 219, 566, 235);
		contentPanel.add(scrollPane);

		tfMensaje = new JTextArea();
		scrollPane.setViewportView(tfMensaje);
		tfMensaje.setLineWrap(true);;



	}

	/**
	 * Prompt for and return the address of the server.
	 */
	private String getServerAddress() {
		return JOptionPane.showInputDialog(
				contentPanel,
				"Enter IP Address of the Server:",
				"Welcome to the Chatter",
				JOptionPane.QUESTION_MESSAGE);
	}

	/**
	 * Prompt for and return the desired screen name.
	 */


	public  void run() throws IOException{

		String serverAddress = getServerAddress();
		Socket clientSocket = new Socket(serverAddress,9000);

		in = new BufferedReader(new InputStreamReader(
				clientSocket.getInputStream())); //lee el socket ingresado.

		out = new PrintWriter(clientSocket.getOutputStream(), true);
		permiso();
		while (true) {
			String line = in.readLine();//lee los datos enviados de servidor
			if (line.startsWith("Error")) {//si hay palabras restringuidas es denegado 
				JOptionPane.showMessageDialog(null, line );
				btnEnviarCorreo.setEnabled(true);
			} else if (line.startsWith("correcto")) {//s ino hay palabras restringuidas es aceptado 
				JOptionPane.showMessageDialog(null, line);
				btnEnviarCorreo.setEnabled(true);
			} 
		}

	}
	public  void permiso(){
		int resp=JOptionPane.showConfirmDialog(null, "Agrego los permisos necesarios como usuario");
		if(JOptionPane.OK_OPTION==resp){
			System.out.println("Selecciona opción Afirmativa");
		}
		else if(JOptionPane.CANCEL_OPTION==resp)
		{
			System.out.println("Selecciona opción Cancelar, se supone ya esta los permisos correctos");
		}else{
			AbrirURLGmail();
		}

	}
	public void limpiar(){
		tfRemitente.setText("");
		tfContrasenha.setText("");
		tfDestino.setText("");
		tfAsunto.setText("");
		tfMensaje.setText("");
	}

	private void AbrirURLGmail() {

		String URL = "https://www.google.com/settings/security/lesssecureapps";
		//String URL="https://www.youtube.com/watch?v=lsh5OmqTmN4&t=1001s";
	
		try {
			Desktop.getDesktop().browse(new URI(URL));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (URISyntaxException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
	public static void main(String[] args) throws Exception {
		cliente dialog = new cliente();
		dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
		dialog.setVisible(true);
		dialog.run();

	}


}
